// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planerve.App.Persistence.Contexts;

#nullable disable

namespace Planerve.App.Persistence.Migrations
{
    [DbContext(typeof(PlanerveDbContext))]
    partial class PlanerveDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VersionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApplicationId");

                    b.Property<int>("CompletedRequirementsCount")
                        .HasColumnType("int");

                    b.Property<int>("DocumentCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalRequirementCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationDocument");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApplicationId");

                    b.Property<string>("ApplicationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CalculatedFee")
                        .HasColumnType("bit");

                    b.Property<bool>("FormSectionsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("PlansAndDocsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("int");

                    b.Property<bool>("SubmittedToLocalAuthority")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ApplicationProgress");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApplicationId");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryValue")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationType");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApplicationId");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.AuthorisedUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ArchiveApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("CopyApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("DownloadForm")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPermission")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<bool>("ReadApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("ReadForm")
                        .HasColumnType("bit");

                    b.Property<bool>("ShareApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("UpdateForm")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("AuthorisedUser");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeA", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.ToTable("FormTypeA");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeB", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.ToTable("FormTypeB");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeC", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.ToTable("FormTypeC");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeD", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.ToTable("FormTypeD");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeE", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.ToTable("FormTypeE");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationDocument", b =>
                {
                    b.HasOne("Planerve.App.Domain.Entities.ApplicationEntities.Application", "Application")
                        .WithOne("Document")
                        .HasForeignKey("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationDocument", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationDocument+DocumentRequirement", "DocumentRequirements", b1 =>
                        {
                            b1.Property<Guid>("ApplicationDocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ApplicationDocumentId", "Id");

                            b1.ToTable("DocumentRequirement");

                            b1.WithOwner()
                                .HasForeignKey("ApplicationDocumentId");
                        });

                    b.Navigation("Application");

                    b.Navigation("DocumentRequirements");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationProgress", b =>
                {
                    b.HasOne("Planerve.App.Domain.Entities.ApplicationEntities.Application", "Application")
                        .WithOne("Progress")
                        .HasForeignKey("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationProgress", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationType", b =>
                {
                    b.HasOne("Planerve.App.Domain.Entities.ApplicationEntities.Application", "Application")
                        .WithOne("Type")
                        .HasForeignKey("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationType", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationUser", b =>
                {
                    b.HasOne("Planerve.App.Domain.Entities.ApplicationEntities.Application", "Application")
                        .WithOne("Users")
                        .HasForeignKey("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationUser", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.AuthorisedUser", b =>
                {
                    b.HasOne("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationUser", null)
                        .WithMany("AuthorisedUsers")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeA", b =>
                {
                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AccessSection", "AccessSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AdviceSection", "AdviceSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AgentSection", "AgentSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ApplicantSection", "ApplicantSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AuthorityMemberSection", "AuthorityMemberSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.MaterialSection", "MaterialSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.OwnershipCertificationSection", "OwnershipCertificationSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ParkingSection", "ParkingSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ProposalSection", "ProposalSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteSection", "SiteSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteVisitSection", "SiteVisitSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.TreeAndHedgeSection", "TreeAndHedgeSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeAApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeAApplicationId");

                            b1.ToTable("FormTypeA");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeAApplicationId");
                        });

                    b.Navigation("AccessSection");

                    b.Navigation("AdviceSection");

                    b.Navigation("AgentSection");

                    b.Navigation("ApplicantSection");

                    b.Navigation("AuthorityMemberSection");

                    b.Navigation("MaterialSection");

                    b.Navigation("OwnershipCertificationSection");

                    b.Navigation("ParkingSection");

                    b.Navigation("ProposalSection");

                    b.Navigation("SiteSection");

                    b.Navigation("SiteVisitSection");

                    b.Navigation("TreeAndHedgeSection");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeB", b =>
                {
                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AccessSection", "AccessSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AdviceSection", "AdviceSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AgentSection", "AgentSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ApplicantSection", "ApplicantSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AuthorityMemberSection", "AuthorityMemberSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.MaterialSection", "MaterialSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.OwnershipCertificationSection", "OwnershipCertificationSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ParkingSection", "ParkingSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ProposalSection", "ProposalSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteSection", "SiteSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteVisitSection", "SiteVisitSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.TreeAndHedgeSection", "TreeAndHedgeSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.BiodiversitySection", "BiodiversitySection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.EmploymentSection", "EmploymentSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ExistingUseSection", "ExistingUseSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.FloodRiskSection", "FloodRiskSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.FoulSewageSection", "FoulSewageSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.HazardousSubstancesSection", "HazardousSubstancesSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.IndustrialMachinerySection", "IndustrialMachinerySection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.OpeningHoursSection", "OpeningHoursSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteAreaSection", "SiteAreaSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.TradeEffluentSection", "TradeEffluentSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.WasteSection", "WasteSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeBApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeBApplicationId");

                            b1.ToTable("FormTypeB");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeBApplicationId");
                        });

                    b.Navigation("AccessSection");

                    b.Navigation("AdviceSection");

                    b.Navigation("AgentSection");

                    b.Navigation("ApplicantSection");

                    b.Navigation("AuthorityMemberSection");

                    b.Navigation("BiodiversitySection");

                    b.Navigation("EmploymentSection");

                    b.Navigation("ExistingUseSection");

                    b.Navigation("FloodRiskSection");

                    b.Navigation("FoulSewageSection");

                    b.Navigation("HazardousSubstancesSection");

                    b.Navigation("IndustrialMachinerySection");

                    b.Navigation("MaterialSection");

                    b.Navigation("OpeningHoursSection");

                    b.Navigation("OwnershipCertificationSection");

                    b.Navigation("ParkingSection");

                    b.Navigation("ProposalSection");

                    b.Navigation("SiteAreaSection");

                    b.Navigation("SiteSection");

                    b.Navigation("SiteVisitSection");

                    b.Navigation("TradeEffluentSection");

                    b.Navigation("TreeAndHedgeSection");

                    b.Navigation("WasteSection");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeC", b =>
                {
                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AdviceSection", "AdviceSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeCApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeCApplicationId");

                            b1.ToTable("FormTypeC");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeCApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AgentSection", "AgentSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeCApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeCApplicationId");

                            b1.ToTable("FormTypeC");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeCApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ApplicantSection", "ApplicantSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeCApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeCApplicationId");

                            b1.ToTable("FormTypeC");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeCApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ProposalSection", "ProposalSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeCApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeCApplicationId");

                            b1.ToTable("FormTypeC");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeCApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteSection", "SiteSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeCApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeCApplicationId");

                            b1.ToTable("FormTypeC");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeCApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteVisitSection", "SiteVisitSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeCApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeCApplicationId");

                            b1.ToTable("FormTypeC");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeCApplicationId");
                        });

                    b.Navigation("AdviceSection");

                    b.Navigation("AgentSection");

                    b.Navigation("ApplicantSection");

                    b.Navigation("ProposalSection");

                    b.Navigation("SiteSection");

                    b.Navigation("SiteVisitSection");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeD", b =>
                {
                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AdviceSection", "AdviceSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeDApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeDApplicationId");

                            b1.ToTable("FormTypeD");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeDApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AgentSection", "AgentSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeDApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeDApplicationId");

                            b1.ToTable("FormTypeD");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeDApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ApplicantSection", "ApplicantSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeDApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeDApplicationId");

                            b1.ToTable("FormTypeD");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeDApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AuthorityMemberSection", "AuthorityMemberSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeDApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeDApplicationId");

                            b1.ToTable("FormTypeD");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeDApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ProposalSection", "ProposalSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeDApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeDApplicationId");

                            b1.ToTable("FormTypeD");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeDApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteSection", "SiteSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeDApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeDApplicationId");

                            b1.ToTable("FormTypeD");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeDApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteVisitSection", "SiteVisitSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeDApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeDApplicationId");

                            b1.ToTable("FormTypeD");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeDApplicationId");
                        });

                    b.Navigation("AdviceSection");

                    b.Navigation("AgentSection");

                    b.Navigation("ApplicantSection");

                    b.Navigation("AuthorityMemberSection");

                    b.Navigation("ProposalSection");

                    b.Navigation("SiteSection");

                    b.Navigation("SiteVisitSection");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.FormEntities.FormTypeE", b =>
                {
                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AdviceSection", "AdviceSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeEApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeEApplicationId");

                            b1.ToTable("FormTypeE");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeEApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.AgentSection", "AgentSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeEApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeEApplicationId");

                            b1.ToTable("FormTypeE");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeEApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ApplicantSection", "ApplicantSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeEApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeEApplicationId");

                            b1.ToTable("FormTypeE");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeEApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.OwnershipCertificationSection", "OwnershipCertificationSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeEApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeEApplicationId");

                            b1.ToTable("FormTypeE");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeEApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.ProposalSection", "ProposalSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeEApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeEApplicationId");

                            b1.ToTable("FormTypeE");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeEApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteSection", "SiteSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeEApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeEApplicationId");

                            b1.ToTable("FormTypeE");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeEApplicationId");
                        });

                    b.OwnsOne("Planerve.App.Domain.Entities.FormEntities.Shared.SiteVisitSection", "SiteVisitSection", b1 =>
                        {
                            b1.Property<Guid>("FormTypeEApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormTypeEApplicationId");

                            b1.ToTable("FormTypeE");

                            b1.WithOwner()
                                .HasForeignKey("FormTypeEApplicationId");
                        });

                    b.Navigation("AdviceSection");

                    b.Navigation("AgentSection");

                    b.Navigation("ApplicantSection");

                    b.Navigation("OwnershipCertificationSection");

                    b.Navigation("ProposalSection");

                    b.Navigation("SiteSection");

                    b.Navigation("SiteVisitSection");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.Application", b =>
                {
                    b.Navigation("Document");

                    b.Navigation("Progress");

                    b.Navigation("Type");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Planerve.App.Domain.Entities.ApplicationEntities.ApplicationUser", b =>
                {
                    b.Navigation("AuthorisedUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
